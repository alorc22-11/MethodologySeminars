import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.StringTokenizer;

import javax.xml.stream.events.Characters;

import acm.program.ConsoleProgram;

public class problem65 extends ConsoleProgram {

	public void run() {
		HashMap<String, HashSet<String>> mp = new HashMap<>();
		String curr;
		while (true) {
			curr = readLine("Enter Friend Pair");
			if (curr.equals(""))
				break;
			String friend1 = curr.substring(0, curr.indexOf(" "));
			String friend2 = curr.substring(curr.indexOf(" ") + 1);
			HashSet<String> st;
			if (mp.containsKey(friend1)) {
				st = mp.get(friend1);
			} else {
				st = new HashSet<>();
			}
			st.add(friend2);
			mp.put(friend1, st);
		}

		// find the number of people who considers each person as a friend (aka
		// follower)
		HashMap<String, Integer> followersCount = new HashMap<>();
		HashSet<String> friendSet;
		for (String name : mp.keySet()) {
			friendSet = mp.get(name);
			for (String friend : friendSet) {
				if (followersCount.containsKey(friend)) {
					followersCount.put(friend, followersCount.get(friend) + 1);
				} else {
					followersCount.put(friend, 1);
				}
			}
		}

		println("The most famous person: " + getMaxValueKey(followersCount));
	}

	private String getMaxValueKey(HashMap<String, Integer> followersCount) {
		int value;
		int maxInt = 0;
		String maxString = "";
		for (String key : followersCount.keySet()) {
			value = followersCount.get(key);
			if (maxInt < value) {
				maxInt = value;
				maxString = key;
			}
		}
		return maxString;
	}
}